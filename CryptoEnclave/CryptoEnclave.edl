enclave {
    trusted {
        /*
        * This function decrypts a message.
        * @param encMessageIn
        *    the encrypted message containing MAC + IV + encrypted message.
        * @param len
        *    the length of the encMessageIn.
        * @param decMessageOut
        *    the destination of the decrypted message.
        * @param lenOut
        *    the length of the decMessageOut.
        */
        public void decryptMessage([user_check] char *encMessageIn, size_t len, [user_check] char *decMessageOut, size_t lenOut);

        /*
        * This function encrypts a message.
        * @param decMessageIn
        *    the original message
        * @param len
        *    the length of the decMessageIn.
        * @param encMessageOut
        *    the destination of the encrypted message containing MAC + IV + encrypted message.
        * @param lenOut
        *    the length of the encMessageOut.
        */
        public void encryptMessage([user_check] char *decMessageIn, size_t len, [user_check] char *encMessageOut, size_t lenOut);

        public void hashMessage([user_check] char *hashMessageIn, size_t len);
    };

    untrusted {
        [cdecl] void emit_debug([string,in] const char *str);
    };
};
